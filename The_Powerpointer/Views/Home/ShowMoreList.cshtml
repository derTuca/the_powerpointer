@using Microsoft.EntityFrameworkCore
@using The_Powerpointer.Data

@inject UserManager<ApplicationUser> UserManager
@inject ApplicationDbContext DbContext

@model ShowMoreViewModel

@{

    var fakeUser = await UserManager.GetUserAsync(User);
    var user = await DbContext.Users.SingleOrDefaultAsync(u => u.Id == fakeUser.Id);
  
}
<div id="moreBody">
    @if (Model.Pictures != null)
    {
        <div class="ui two stackable cards">
            @foreach (var p in Model.Pictures)
            {
                <div class="ui fluid card">
                    <div class="image">
                        <img src="~/media/pictures/@p.Source" />
                    </div>
                    <div class="content">
                        <div class="header">@p.Name</div>
                        <div class="meta">@p.Author</div>
                    </div>
                </div>
            }
       
        </div>
    }

    else if (Model.Songs != null)
    {
        foreach (var s in Model.Songs)
        {
            <div class="ui fluid card">
                <div class="content">
                    <audio src="~/media/songs/@s.Source" class="audioTag"></audio>
                    <i class="play icon playOnShowMoreIcon" style="cursor: pointer;" id="" onclick="songPlayShowMoreClicked(@s.Source)"></i>
                    <span class="songName">@s.Name</span>
                    <span class="bulletPoint">&bull;</span>
                    <span class="songAuthor">@s.Author</span>
                </div>

                <div class="ui range my-range" style="display: inline;" id=""></div>
            </div>

        }
    }

    else
    {
        <div class="ui four doubling stackable cards">
            @foreach (var n in Model.News)
            {
                var fav = false;
                if (user != null)
                {
                    var news = DbContext.UserNews.SingleOrDefault(un => un.NewsId == n.Id && un.ApplicationUserId == user.Id);
                    if (news != null)
                    {
                        fav = true;
                    }
                }
                @Html.Partial("_NewsCard", new NewsCardViewModel
                {
                    News = n,
                    Favorited = fav
                })
            }
        </div>
    }
</div>
